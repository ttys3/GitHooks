#!/usr/bin/env bash

#
# Pre-receive hook that will block any new commits that contain files ending
# with .gz, .zip or .tgz
# you can put this file to /home/git/.gitolite/hooks/ttys3/pre-receive
#
# More details on pre-receive hooks and how to apply them can be found on
# https://help.github.com/enterprise/admin/guides/developer-workflow/managing-pre-receive-hooks-on-the-github-enterprise-appliance/
#

# ----- START CONFIG -----
DISABLED_EXT_CONF_FILE=/home/git/.gitolite/hooks/ttys3/.git_file_ext_disabled
deploy_to_dir="/tmp/git_empty_work/"
GIT_CMD="env GIT_WORK_TREE=$deploy_to_dir /usr/bin/git"
shopt -s extglob
FILE_EXT_DISABLED=`cat $DISABLED_EXT_CONF_FILE`
FILE_EXT_DISABLED_PATTERN="@($FILE_EXT_DISABLED)"
# ----- END CONFIG -----

test -d $deploy_to_dir || mkdir $deploy_to_dir

zero_commit="0000000000000000000000000000000000000000"

# Do not traverse over commits that are already in the repository
# (e.g. in a different branch)
# This prevents funny errors if pre-receive hooks got enabled after some
# commits got already in and then somebody tries to create a new branch
# If this is unwanted behavior, just set the variable to empty
excludeExisting="--not --all"

while read oldrev newrev refname; do
  # echo "payload"
  echo $refname $oldrev $newrev

  # branch or tag get deleted
  if [ "$newrev" = "$zero_commit" ]; then
    continue
  fi

  # Check for new branch or tag
  if [ "$oldrev" = "$zero_commit" ]; then
    span=`$GIT_CMD rev-list $newrev $excludeExisting`
  else
    span=`$GIT_CMD rev-list $oldrev..$newrev $excludeExisting`
  fi

  for COMMIT in $span;
  do
    for FILE  in `$GIT_CMD log -1 --name-only --pretty=format:'' $COMMIT`;
    do
      case $FILE in
      $FILE_EXT_DISABLED_PATTERN )
        echo " --------------------------- FBI WARNING --------------------------- "
        echo "Hello there! We have restricted committing that filetype."
        echo "blocked filetypes: $FILE_EXT_DISABLED" | sed -r 's/[()@]+//g'
        echo "blocked file: $FILE"
        echo " --------------------------- FBI WARNING --------------------------- "
        exit 1
        ;;
      esac
    done
  done
done
exit 0

# vim: set ft=bash ts=4 sw=4 et: